/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.intercom.android;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import io.intercom.android.sdk.Intercom;
import io.intercom.android.sdk.identity.Registration;

@Kroll.module(name="Tiintercomandroid", id="ti.intercom.android")
public class TiintercomandroidModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "TiintercomandroidModule";
	private static final boolean DBG = TiConfig.LOGD;
	public static TiApplication theApp;
	public boolean initialized = false;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public TiintercomandroidModule()
	{
		super();
	}

	@Kroll.onAppCreate
  public static void onAppCreate(TiApplication app) {
    Log.d(LCAT, "TiIntercom : onAppCreate");
    theApp = app;
  }

  @Kroll.method
  public void initialize(KrollDict props) {
    Log.d(LCAT, "TiIntercom : initialize()");
    if (props.containsKey("api_key") && props.containsKey("app_id")) {
      Intercom.initialize(theApp, props.getString("api_key"), props.getString("app_id"));
      initialized = true;
    } else {
      Log.d(LCAT, "Intercom : intialize() requies api_key and app_id to be set");
    }
  }

  @Kroll.method
  public void reset() {
    Intercom.client().reset();
    Log.d(LCAT, "Intercom : reset()");
  }

  @Kroll.method
  public void registerUserWithEmail(String email) {
    Intercom.client().registerIdentifiedUser(new Registration().withEmail(email));
    Log.d(LCAT, "Intercom : registerUserWithEmail() : " + email);
  }

  @Kroll.method
  public void presentConversationList() {
    Intercom.client().displayConversationsList();
    Log.d(LCAT, "Intercom : presentConversationList()");
  }

}

